# syntax=docker/dockerfile:1.3
FROM jupyterhub/jupyterhub:latest

# Python libs
RUN apt-get update \
 && apt-get install -yq --no-install-recommends \
    build-essential \
    ca-certificates \
    locales \
    python3-dev \
    python3-pip \
    python3-pycurl \
    nodejs \
    npm \
    git \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

#jupyter
RUN pip install jupyter \
jupyter_client

#additional python packages for data visualization, etc. - Many of the basics ship with jupyterhub base image
RUN pip install seaborn \
    pip install ipywidgets \
    pip install python-dotenv \
    pip install sendgrid \
    pip install cloudscraper 

#Additional python packages
COPY kdp-api-python-client.zip /srv/user/kdp-api-python-client.zip
COPY kdp-python-connector.zip /srv/user/kdp-python-connector.zip


RUN pip install /srv/user/kdp-api-python-client.zip && \
    pip install /srv/user/kdp-python-connector.zip


########## SPARK ##########
## Spark dependencies
## Default values can be overridden at build time
## (ARGS are in lower case to distinguish them from ENV)
ARG spark_version="3.1.2"
ARG hadoop_version="3.2"
ARG spark_checksum="2385CB772F21B014CE2ABD6B8F5E815721580D6E8BC42A26D70BBCDDA8D303D886A6F12B36D40F6971B5547B70FAE62B5A96146F0421CB93D4E51491308EF5D5"
ARG openjdk_version="11"
#
ENV APACHE_SPARK_VERSION="${spark_version}" \
    HADOOP_VERSION="${hadoop_version}"
#
RUN apt-get update --yes && \
    apt-get install --yes --no-install-recommends \
    "openjdk-${openjdk_version}-jre-headless" \
    ca-certificates-java && \
    apt-get clean && rm -rf /var/lib/apt/lists/*
#
# #install wget for below
RUN apt-get update && apt-get install -y wget
#
# # Spark installation
WORKDIR /tmp
RUN wget -q "https://archive.apache.org/dist/spark/spark-${APACHE_SPARK_VERSION}/spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz" && \
    echo "${spark_checksum} *spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz" | sha512sum -c - && \
    tar xzf "spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz" -C /usr/local --owner root --group root --no-same-owner && \
    rm "spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz"
#
WORKDIR /usr/local
#
# # Configure Spark
ENV SPARK_HOME=/usr/local/spark
ENV SPARK_OPTS="--driver-java-options=-Xms1024M --driver-java-options=-Xmx4096M --driver-java-options=-Dlog4j.logLevel=info" \
    PATH="${PATH}:${SPARK_HOME}/bin"

RUN ln -s "spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}" spark && \
    # Add a link in the before_notebook hook in order to source automatically PYTHONPATH
    mkdir -p /usr/local/bin/before-notebook.d && \
    ln -s "${SPARK_HOME}/sbin/spark-config.sh" /usr/local/bin/before-notebook.d/spark-config.sh

# # Fix Spark installation for Java 11 and Apache Arrow library
# # see: https://github.com/apache/spark/pull/27356, https://spark.apache.org/docs/latest/#downloading
RUN cp -p "${SPARK_HOME}/conf/spark-defaults.conf.template" "${SPARK_HOME}/conf/spark-defaults.conf" && \
    echo 'spark.driver.extraJavaOptions -Dio.netty.tryReflectionSetAccessible=true' >> "${SPARK_HOME}/conf/spark-defaults.conf" && \
    echo 'spark.executor.extraJavaOptions -Dio.netty.tryReflectionSetAccessible=true' >> "${SPARK_HOME}/conf/spark-defaults.conf"

#import in IDE to make a spark context available in your code
RUN pip install findspark
########## END SPARK ##########


# Install oauthenticator
RUN python3 -m pip install oauthenticator

# Create oauthenticator directory
WORKDIR /srv/oauthenticator
ENV OAUTHENTICATOR_DIR /srv/oauthenticator

# Get config for jupyterhub and oauth
COPY jupyterhub_config.py /srv/oauthenticator/jupyterhub_config.py
COPY oauth-setup-and-run-jupyterhub /srv/oauthenticator/oauth-setup-and-run-jupyterhub

RUN pip install jupyter_nbextensions_configurator

RUN jupyter nbextension enable --py widgetsnbextension --sys-prefix  && \
    jupyter nbextensions_configurator enable --sys-prefix

COPY /KDP4 /srv/user/KDP4
COPY setup.py /srv/user/setup.py

#install KDP4 jupyter extension
RUN cd /srv/user/ && pip install -e . --user && \
    jupyter nbextension install KDP4 --sys-prefix && \
    jupyter nbextension enable KDP4/main --sys-prefix

# Set up users and launch jupyterhub.
RUN groupadd jupyter
ENTRYPOINT ["/bin/bash", "/srv/oauthenticator/oauth-setup-and-run-jupyterhub"]

# add example read/write kdp files to user dir in /examples - no save
RUN mkdir -p /srv/examples
RUN chown $USER:jupyter /srv/examples \
    && chmod 777 /srv/examples \
    && chmod g+s /srv/examples \
    && ln -s /srv/examples /etc/skel/examples
ADD /examples /srv/examples

RUN mkdir -p /srv/KDP4
COPY /KDP4 /srv/KDP4
RUN cd /etc/skel  \
    && ln -s /srv/KDP4 KDP4





